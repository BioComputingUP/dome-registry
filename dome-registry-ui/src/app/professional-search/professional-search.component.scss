@import '../../styles/variables';
@import '../../styles/mixins';
@import '../../styles/base';

// Main container
.professional-search {
  @include page-background-with-gradient;
  width: 100%;
  min-height: 100vh;
  color: $color-white;
  font-family: $font-primary;
  position: relative;
  overflow: visible;

  @include floating-particles(visible);
}

// Main content container
.main-container {
  position: relative;
  z-index: 10;
  @include responsive-width(100%);
  max-width: 1200px;
  margin: 0 auto;
  @include responsive-padding(2rem, 1.5rem, 1rem, 1rem);
  @include flex(row, flex-start, flex-start, 2rem);

  @include for-mobile {
    flex-direction: column;
  }
}

// Search section - New Design
.search-panel, .auth-panel {
  @include flex(column, flex-start, stretch);
  width: 300px;
  min-width: 300px;
  height: auto;
  max-height: 80vh;
  overflow-y: auto;
  //background: linear-gradient(135deg, rgba($color-white-10, 0.8), rgba($color-white-05, 0.8));
  border-radius: 16px;
  backdrop-filter: blur(15px);
  padding: 2rem;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
  border: 1px solid $color-white-15;
  position: sticky;
  top: 6rem;
  overflow-x: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 6px;
    height: 100%;
    background: linear-gradient(to bottom, $navbar-orange, darken($navbar-orange, 15%));
    border-radius: 16px 0 0 16px;
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at top right, rgba($navbar-orange, 0.1), transparent 60%);
    pointer-events: none;
    z-index: 0;
  }

  &:hover {
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.2);
  }

  @media (max-width: $breakpoint-md) {
    width: 100%;
    min-width: 100%;
    height: auto;
    position: relative;
    top: 0;
    padding: 2rem;
  }

  @media (max-width: $breakpoint-sm) {
    padding: 1.5rem;
  }
}

.search-panel-header {
  margin-bottom: 1.5rem;
  position: relative;
  z-index: 1;
  text-align: center;

  .search-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: $color-white;
    margin-bottom: 0.5rem;
    letter-spacing: 0.5px;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    @media (max-width: $breakpoint-sm) {
      font-size: 1.25rem;
    }
  }

  .search-subtitle {
    font-size: 0.9rem;
    color: $color-white-70;
    margin: 0;

    @media (max-width: $breakpoint-sm) {
      font-size: 0.8rem;
    }
  }
}

.search-panel-body {
  @include flex(column, flex-start, stretch, 2rem);
  position: relative;
  z-index: 1;
}

.search-bar-container {
  @include flex(column, flex-start, stretch, 1rem);
  width: 100%;
  position: relative;
}

.search-input-wrapper {
  flex: 1;
  position: relative;
  background-color: $color-white-15;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  border: 1px solid $color-white-20;

  &:hover, &:focus-within {
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: rgba($navbar-orange, 0.4);
  }

  .search-icon {
    position: absolute;
    left: 1.25rem;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    pointer-events: none;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 12px;
      height: 12px;
      border: 2px solid $color-white-70;
      border-radius: 50%;
      transition: all 0.3s ease;
    }

    &::after {
      content: '';
      position: absolute;
      top: 9px;
      left: 11px;
      width: 2px;
      height: 7px;
      background-color: $color-white-70;
      transform: rotate(45deg);
      border-radius: 1px;
      transition: all 0.3s ease;
    }
  }

  &:focus-within .search-icon {
    &::before {
      border-color: $navbar-orange;
    }

    &::after {
      background-color: $navbar-orange;
    }
  }
}

// Filter dropdown
.filter-wrapper {
  position: relative;
  min-width: 180px;
  z-index: 10;

  @media (max-width: $breakpoint-md) {
    width: 100%;
  }
}

.filter-button, .sort-dropdown-button {
  @include flex(row, space-between, center);
  width: 100%;
  padding: 1rem 1.5rem;
  background-color: rgba($navbar-orange, 0.15);
  border: 1px solid rgba($navbar-orange, 0.3);
  border-radius: 12px;
  color: $color-white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba($navbar-orange, 0.3), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  &:hover {
    background-color: rgba($navbar-orange, 0.2);
    transform: translateY(-2px);

    &::before {
      opacity: 1;
    }
  }
}

.filter-button {
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);

  &:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }

  .filter-label {
    margin-right: 10px;
    position: relative;
    z-index: 2;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }
}

.filter-dropdown, .sort-dropdown {
  position: absolute;
  top: calc(100% + 10px);
  left: 0;
  width: 100%;
  border-radius: 12px;
  backdrop-filter: blur(20px);
  overflow: hidden;
  display: none;
  border: 1px solid rgba($navbar-orange, 0.15);
  transform: translateY(-10px);
  opacity: 0;
  transition: transform 0.3s cubic-bezier(0.165, 0.84, 0.44, 1), opacity 0.3s ease;
}

.filter-dropdown {
  height: auto;
  background: linear-gradient(135deg, rgba(30, 30, 40, 0.85), rgba(20, 20, 30, 0.9));
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15), 0 0 1px rgba($navbar-orange, 0.2);
  z-index: 20; /* Lower z-index so it doesn't overlap with sort button */

  &.open {
    display: block !important;
    z-index: 20; /* Keep consistent with the base z-index */
    transform: translateY(0);
    opacity: 1;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15),
                0 0 15px rgba($navbar-orange, 0.1), 0 0 3px rgba($navbar-orange, 0.2);
    animation: subtle-glow 2s ease-in-out infinite alternate;
  }

  @keyframes subtle-glow {
    from {
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15),
                  0 0 15px rgba($navbar-orange, 0.1), 0 0 3px rgba($navbar-orange, 0.2);
    }
    to {
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15),
                  0 0 20px rgba($navbar-orange, 0.15), 0 0 5px rgba($navbar-orange, 0.25);
    }
  }

  .dropdown-item {
    display: block;
    width: 100%;
    padding: 1rem 1.5rem;
    color: $color-white;
    cursor: pointer;
    transition: all 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
    position: relative;
    overflow: hidden;
    font-weight: 500;
    letter-spacing: 0.3px;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background: linear-gradient(to bottom, $navbar-orange, darken($navbar-orange, 15%));
      transform: scaleY(0);
      transition: transform 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
      opacity: 0.8;
      border-radius: 0 2px 2px 0;
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgba($navbar-orange, 0.15), transparent 80%);
      opacity: 0;
      transition: opacity 0.25s ease;
      z-index: -1;
    }

    &:hover {
      background-color: rgba($color-white-15, 0.5);
      padding-left: 1.75rem;
      color: rgba($color-white, 0.95);
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

      &::before {
        transform: scaleY(1);
      }

      &::after {
        opacity: 1;
      }
    }
  }

  .dropdown-divider {
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba($navbar-orange, 0.2), transparent);
    margin: 0.25rem 1.5rem;
    opacity: 0.7;
  }
}

// Search input
.search-input {
  width: 100%;
  padding: 1rem 1.25rem 1rem 3rem;
  border: none;
  background-color: transparent;
  color: $color-white;
  font-size: 1rem;
  outline: none;
  transition: all 0.3s ease;
  position: relative;
  z-index: 2;
  caret-color: $navbar-orange;
  letter-spacing: 0.3px;

  &::placeholder {
    color: $color-white-50;
    transition: color 0.3s ease;
    font-style: italic;
  }

  &:focus::placeholder {
    color: $color-white-70;
    transform: translateX(3px);
  }
}

// Toggle switch
.toggle-container {
  @include flex(row, space-between, center, 0.75rem);
  margin-left: 0;
}

.toggle-label {
  color: $color-white;
  font-weight: 500;
  margin: 0;
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}

.toggle-input {
  opacity: 0;
  width: 0;
  height: 0;

  &:checked + .toggle-slider {
    background-color: $navbar-orange;
  }

  &:checked + .toggle-slider:before {
    transform: translateX(26px);
  }

  &:disabled + .toggle-slider {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: $color-white-30;
  transition: .4s;
  border-radius: 34px;

  &:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: $color-white;
    transition: .4s;
    border-radius: 50%;
  }
}

// Sort controls container (replaces sort-panel)
.sort-controls-container {
  @include flex(column, space-between, center, 1.5rem);
  width: 100%;
  position: relative;
  z-index: 5; /* Same z-index as sort-dropdown-wrapper */

  @media (max-width: $breakpoint-md) {
    align-items: flex-start;
  }
}

.sort-container {
  @include flex(row, flex-start, center);
  position: relative;
  z-index: 10;
  width: 100%;
}

.sort-dropdown-wrapper {
  position: relative;
  width: 100%;
  z-index: 30; /* Higher z-index than filter dropdown */
  animation: subtle-fade-in 0.5s ease-out;
}

@keyframes subtle-fade-in {
  from {
    opacity: 0.7;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.sort-dropdown-button {
  @include flex(row, space-between, center);
  width: 100%;
  padding: 1rem 1.5rem;
  background-color: rgba($navbar-orange, 0.15);
  border: 1px solid rgba($navbar-orange, 0.3);
  border-radius: 12px;
  color: $color-white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1), 0 0 0 rgba($navbar-orange, 0);

  &:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15), 0 0 15px rgba($navbar-orange, 0.3);
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 0 8px rgba($navbar-orange, 0.2);
  }

  .sort-label {
    font-weight: 600;
    color: rgba($color-white, 0.90);
    position: relative;
    z-index: 2;
    letter-spacing: 0.5px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    margin-right: 0.5rem;
  }

  .active-sort {
    font-weight: 700;
    color: $color-white;
    margin: 0 0.5rem;
    position: relative;
    z-index: 2;
    letter-spacing: 0.3px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  .sort-direction-icon {
    position: relative;
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 8px solid $color-white;
    margin-right: 0.5rem;
    transition: transform 0.3s ease;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));

    &.asc {
      transform: rotate(180deg);
    }
  }


  .dropdown-arrow {
    position: relative;
    width: 14px;
    height: 14px;
    transition: transform 0.3s ease;
    z-index: 2;

    &::before, &::after {
      content: '';
      position: absolute;
      background-color: $color-white;
      top: 50%;
      left: 50%;
      width: 8px;
      height: 2px;
      border-radius: 1px;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    &::before {
      transform: translate(-50%, -50%) rotate(45deg);
    }

    &::after {
      transform: translate(-50%, -50%) rotate(-45deg);
    }

    &.open {
      transform: rotate(180deg);
    }
  }
}

.sort-dropdown {
  background: linear-gradient(135deg, rgba(30, 30, 40, 0.9), rgba(20, 20, 30, 0.95));
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15), 0 0 1px rgba($navbar-orange, 0.2);
  z-index: 100;

  &.open {
    display: block !important;
    z-index: 30; /* Keep consistent with the sort-dropdown-wrapper z-index */
    transform: translateY(0);
    opacity: 1;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25), 0 2px 8px rgba(0, 0, 0, 0.15),
                0 0 15px rgba($navbar-orange, 0.1), 0 0 3px rgba($navbar-orange, 0.2);
    animation: subtle-glow 2s ease-in-out infinite alternate;
  }


  .sort-dropdown-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0.75rem 1.25rem;
    color: $color-white;
    cursor: pointer;
    transition: all 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
    position: relative;
    overflow: hidden;
    font-weight: 500;
    letter-spacing: 0.3px;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background: linear-gradient(to bottom, $navbar-orange, darken($navbar-orange, 15%));
      transform: scaleY(0);
      transition: transform 0.25s cubic-bezier(0.165, 0.84, 0.44, 1);
      opacity: 0.8;
      border-radius: 0 2px 2px 0;
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgba($navbar-orange, 0.15), transparent 80%);
      opacity: 0;
      transition: opacity 0.25s ease;
      z-index: -1;
    }

    &:hover {
      background-color: rgba($color-white-15, 0.5);
      padding-left: 1.5rem;
      color: rgba($color-white, 0.95);
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

      &::before {
        transform: scaleY(1);
      }

      &::after {
        opacity: 1;
      }
    }

    &.active {
      background-color: rgba($navbar-orange, 0.2);
      font-weight: 600;

      &::before {
        transform: scaleY(1);
      }
    }

    .sort-icon {
      position: relative;
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-bottom: 8px solid $color-white;
      transition: transform 0.3s ease;
      filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));

      &.asc {
        transform: rotate(180deg);
      }
    }
  }
}

.download-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 0.75rem 1rem;
  width: 100%;
  background: linear-gradient(135deg, $navbar-orange, darken($navbar-orange, 10%));
  border: none;
  border-radius: 10px;
  color: $color-white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
  box-shadow: 0 4px 15px rgba($navbar-orange, 0.3);
  position: relative;
  overflow: hidden;
  z-index: 1;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba($navbar-orange, 0.5);

    &::before {
      left: 100%;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 3px 10px rgba($navbar-orange, 0.4);
  }

  .download-icon {
    position: relative;
    width: 18px;
    height: 18px;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 50%;
      width: 2px;
      height: 12px;
      background-color: $color-white;
      transform: translateX(-50%);
    }

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      width: 10px;
      height: 10px;
      border: 2px solid $color-white;
      border-top: none;
      border-right: none;
      transform: translateX(-50%) rotate(-45deg);
    }
  }
}

// Results section
.results-section {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  flex: 1;
  width: 100%;

  @media (max-width: $breakpoint-md) {
    width: 100%;
  }
}

// Loading spinner
.loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid $color-white-30;
  border-top: 4px solid $navbar-orange;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// Results list
.results-list {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
}

.result-card {
  background-color: #fff;
  border-radius: 12px;
  padding: 1.5rem;
  transition: all 0.3s ease;
  border: 1px solid rgba(17, 24, 39, 0.06); // subtle border for white card
  border-left: 3px solid $navbar-orange; // keep accent
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);

  &:hover {
    background-color: #fff;
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }
}

.result-title {
  color: #111827; // gray-900
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
  cursor: pointer;
  transition: color 0.2s ease;

  &:hover {
    color: $navbar-orange;
  }
}

// Match section
.match-section {
  margin-bottom: 1rem;
  padding: 0.75rem;
  background-color: #f9fafb; // light gray on white card
  border-radius: 8px;
}

.match-heading {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #374151; // gray-700
}

.match-item {
  padding: 0.5rem;
  cursor: pointer;
  border-radius: 4px;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: rgba(0, 0, 0, 0.04);
  }
}

.match-field {
  font-weight: 600;
  color: #111827; // gray-900
  margin-right: 0.5rem;
}

.match-highlight {
  background-color: rgba($navbar-orange, 0.3);
  color: $color-white;
  padding: 0 0.25rem;
  border-radius: 2px;
}

// Info rows
.info-row {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
  align-items: center;
}

.info-label {
  font-weight: 600;
  color: #6b7280; // gray-500/600
  min-width: 100px;
}

.info-value {
  color: #111827; // gray-900

  &.private {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #6b7280; // muted gray
  }
}

.info-link {
  color: $primary;
  text-decoration: none;
  display: flex;
  align-items: center;
  gap: 0.25rem;
  transition: color 0.2s ease;

  &:hover {
    color: darken($primary, 8%);
    text-decoration: underline;
  }

  .link-icon {
    position: relative;
    width: 12px;
    height: 12px;

    &::before, &::after {
      content: '';
      position: absolute;
      background-color: currentColor;
    }

    &::before {
      width: 8px;
      height: 8px;
      border: solid currentColor;
      border-width: 0 1px 1px 0;
      top: 0;
      left: 0;
    }

    &::after {
      width: 10px;
      height: 1px;
      transform: rotate(-45deg);
      transform-origin: top left;
      top: 0;
      left: 0;
    }
  }
}

.lock-icon {
  position: relative;
  width: 12px;
  height: 12px;
  border: 1px solid currentColor;
  border-radius: 2px;

  &::before {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    border: 1px solid currentColor;
    border-radius: 50%;
    top: -5px;
    left: 2px;
  }
}

// Tags
.tags-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  padding: 0.25rem 0.75rem;
  background-color: rgba($primary, 0.1);
  color: $primary;
  border-radius: 4px;
  font-size: 0.85rem;
  font-weight: 500;
}

// Score
.score-row {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-top: 1rem;
}

.score-value {
  font-weight: 600;
  color: #111827; // gray-900
  min-width: 40px;
}

.score-bar-container {
  flex: 1;
  height: 12px;
  background-color: $primary; // match page-intro score-wrapper
  border-radius: 6px;
  overflow: hidden;
}

.score-bar {
  height: 100%;
  background: linear-gradient(90deg, $navbar-orange, lighten($navbar-orange, 15%));
  border-radius: 6px;
  transition: width 0.5s ease;
}

// Pagination
.pagination-container {
  display: flex;
  justify-content: center;
  margin-top: 2rem;
}

.pagination {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.page-button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: $color-white-10;
  border: none;
  color: $color-white;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover:not(:disabled) {
    background-color: $color-white-20;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &.active {
    background-color: $navbar-orange;
    color: $color-white;
  }

  &.number {
    font-weight: 500;
  }
}

.page-ellipsis {
  color: $color-white;
  padding: 0 0.25rem;
}

.page-icon {
  position: relative;
  width: 10px;
  height: 10px;

  &.first::before, &.first::after,
  &.last::before, &.last::after,
  &.prev::before, &.next::before {
    content: '';
    position: absolute;
    background-color: currentColor;
  }

  &.prev::before, &.next::before {
    width: 8px;
    height: 8px;
    border-style: solid;
    border-width: 0 2px 2px 0;
    border-color: currentColor;
    top: 1px;
  }

  &.prev::before {
    left: 4px;
    transform: rotate(135deg);
  }

  &.next::before {
    left: 0;
    transform: rotate(-45deg);
  }

  &.first::before, &.last::before {
    width: 8px;
    height: 8px;
    border-style: solid;
    border-width: 0 2px 2px 0;
    border-color: currentColor;
    top: 1px;
  }

  &.first::before {
    left: 6px;
    transform: rotate(135deg);
  }

  &.first::after {
    left: 0;
    top: 4px;
    width: 2px;
    height: 10px;
  }

  &.last::before {
    left: -2px;
    transform: rotate(-45deg);
  }

  &.last::after {
    right: -8px;
    top: 4px;
    width: 2px;
    height: 10px;
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-md) {
  .sort-controls {
    flex-direction: column;
    align-items: flex-start;
  }

  .download-button {
    align-self: flex-end;
  }
}

@media (max-width: $breakpoint-sm) {
  .result-card {
    padding: 1rem;
  }

  .info-row {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
  }

  .info-label {
    min-width: auto;
  }

  .score-row {
    flex-wrap: wrap;
  }

  .score-bar-container {
    width: 100%;
    margin-top: 0.5rem;
  }
}


/* Actions row for result cards */
.card-actions {
  display: flex;
  justify-content: flex-end;
  margin-top: 0.75rem;
}

.cite-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  color: #fff;
  background-color: #28a745; /* match Page Edit Modern */
  border: none;
  border-radius: 9999px;
  padding: 0.5rem 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    background-color: darken(#28a745, 10%);
  }

  &:active {
    transform: translateY(0);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
  }

  i {
    font-size: 1rem;
  }
}

/* Citation Modal Styles (ported from Page Edit Modern) */
.cite-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

.cite-modal {
  background-color: rgba($color-white, 0.95);
  border-radius: 16px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.25rem 1.5rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);

    h3 {
      margin: 0;
      color: $primary;
      font-weight: 700;
      font-size: 1.25rem;
    }

    .close-button {
      background: none;
      border: none;
      color: #666;
      font-size: 1.1rem;
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s ease;

      &:hover {
        background-color: rgba(0, 0, 0, 0.05);
        color: $primary;
      }
    }
  }

  .modal-content {
    padding: 1.25rem 1.5rem;
  }

  .citation-section {
    margin-bottom: 1.25rem;

    &:last-child {
      margin-bottom: 0;
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0.5rem;

      h4 {
        margin: 0;
        color: $secondary;
        font-weight: 600;
        font-size: 1.1rem;
      }

      .copy-button {
        background-color: rgba($primary, 0.1);
        border: none;
        color: $primary;
        padding: 0.5rem;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        width: 32px;
        height: 32px;

        &:hover {
          background-color: rgba($primary, 0.2);
        }

        i {
          font-size: 1rem;
        }
      }
    }

    .input-group, .textarea-group {
      display: flex;
      border-radius: 8px;
      overflow: hidden;
      border: 1px solid rgba(0, 0, 0, 0.1);
      background-color: rgba(255, 255, 255, 0.8);

      &:focus-within {
        border-color: $primary;
        box-shadow: 0 0 0 2px rgba($primary, 0.2);
      }
    }

    .citation-input, .citation-textarea {
      flex: 1;
      border: none;
      padding: 0.75rem 1rem;
      font-size: 0.95rem;
      background-color: transparent;
      color: #333;
      font-family: 'Courier New', monospace;

      &:focus {
        outline: none;
      }
    }

    .citation-textarea {
      min-height: 150px;
      resize: vertical;
    }
  }
}


/* Align Cite button on DOME-id row to the right */
.result-card .dome-id-row .cite-button {
  margin-left: auto;
}

.sidebar-stack {
  position: sticky;
  top: 6rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-self: flex-start;
  width: 300px;
  min-width: 300px;
}

// Ensure panels inside the stack don't use their own sticky positioning to avoid overlap
.sidebar-stack .search-panel,
.sidebar-stack .auth-panel {
  position: static;
  top: auto;
}

@media (max-width: $breakpoint-md) {
  .sidebar-stack {
    position: static;
    top: auto;
    width: 100%;
    min-width: 100%;
  }
}


// Increase only the search-panel height as per request
.search-panel {
  height: 580px;
}


/* Responsive adjustments appended for better small-screen behavior */
@media (max-width: $breakpoint-md) {
  .search-panel {
    height: auto; /* override fixed height for responsiveness */
    max-height: none;
  }
}

@media (max-width: $breakpoint-sm) {
  .search-panel {
    height: auto; /* ensure content can grow/shrink naturally */
    max-height: none;
  }

  /* Make pagination wrap and fit on narrow screens */
  .pagination {
    flex-wrap: wrap;
    justify-content: center;
    row-gap: 0.5rem;
  }
  .page-button {
    width: 32px;
    height: 32px;
  }

  /* Improve stacking and readability of info rows */
  .info-row {
    align-items: flex-start;
  }
  .info-label {
    min-width: 100%;
    margin-right: 0;
  }
  .info-value, .info-link {
    width: 100%;
  }

  /* Score row wraps nicely */
  .score-row {
    flex-wrap: wrap;
  }
  .score-value {
    min-width: 0;
  }
  .score-bar-container {
    width: 100%;
  }

  /* Constrain dropdowns to viewport */
  .filter-dropdown,
  .sort-dropdown {
    max-height: 50vh;
    overflow-y: auto;
  }
}

// New Pagination (Pager) Redesign
.pager-container {
  display: flex;
  justify-content: center;
  margin-top: 2rem;
}

.pager {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-wrap: wrap;
}

.pager__summary {
  color: $color-white-90;
  font-size: 0.875rem;
}

.pager__list {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  list-style: none;
  padding: 0;
  margin: 0;
  flex-wrap: wrap;
}

.pager__btn {
  appearance: none;
  border: 1px solid lighten($navbar-orange, 30%);
  background-color: $color-white;
  color: $navbar-bg;
  border-radius: 9999px;
  min-width: 40px;
  height: 36px;
  padding: 0 0.75rem;
  font-weight: 600;
  line-height: 1;
  cursor: pointer;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, transform 0.05s ease;

  &:hover:not(:disabled) {
    background-color: lighten($navbar-orange, 45%);
    border-color: $navbar-orange;
    color: $navbar-orange;
  }

  &:active:not(:disabled) {
    transform: translateY(1px);
  }

  &:focus-visible {
    outline: 3px solid lighten($navbar-orange, 35%);
    outline-offset: 2px;
  }

  &:disabled,
  &[aria-disabled='true'] {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &.is-active {
    background-color: $navbar-orange;
    border-color: $navbar-orange;
    color: #fff;
  }

  &--number {
    min-width: 40px;
    padding: 0 0.5rem;
  }

  &--prev,
  &--next {
    padding: 0 0.75rem;
  }
}

.pager__ellipsis {
  color: $color-white-70;
  padding: 0 0.25rem;
}

@media (max-width: $breakpoint-sm) {
  .pager {
    gap: 0.5rem;
  }
  .pager__summary {
    width: 100%;
    text-align: center;
  }
}

.filter-icon {
  position: relative;
  width: 14px;
  height: 14px;
  transition: transform 0.3s ease;
  z-index: 2;

  &::before, &::after {
    content: '';
    position: absolute;
    background-color: $color-white;
    top: 50%;
    left: 50%;
    border-radius: 1px;
  }

  &::before {
    width: 14px;
    height: 2px;
    transform: translate(-50%, -50%);
  }

  &::after {
    width: 2px;
    height: 14px;
    transform: translate(-50%, -50%);
    transition: transform 0.3s ease;
  }

  &.open::after {
    transform: translate(-50%, -50%) rotate(90deg);
  }
}
